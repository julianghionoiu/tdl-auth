AWSTemplateFormatVersion: 2010-09-09
Description: "Cloud formation for deploying Auth"
Resources:
    AuthLambdaFunction:
        Type: "AWS::Lambda::Function"
        Properties:
            Code:
                S3Bucket:
                    Ref: AuthLambdaFunctionS3Bucket
                S3Key:
                    Ref: AuthLambdaFunctionS3Key
            FunctionName:
                Ref: AuthLambdaFunctionName
            Handler: "tdl.auth.LambdaHandler"
            MemorySize: 128
            Role:
                Ref: AuthLambdaFunctionRole
            Runtime: "java8"
            Timeout: 1
    ApiGatewayRestApi:
        Type: AWS::ApiGateway::RestApi
        Properties:
            Name:
                Ref: ApiGatewayRestApiName
            Description: Test API
            FailOnWarnings: true
            Body:
                swagger: '2.0'
                info:
                    version: '2017-04-21T18:00:26Z'
                    title: Gif
                #host: tdl-auth-2.execute-api.ap-southeast-1.amazonaws.com
                #basePath: "/production"
                schemes:
                    - https
                paths:
                    "/verify":
                        get:
                            responses:
                                '200':
                                    description: 200 response
                                    headers:
                                        Content-Type:
                                            type: string
                                        Content-Disposition:
                                            type: string
                            x-amazon-apigateway-integration:
                                responses:
                                    default:
                                        statusCode: '200'
                                        responseParameters:
                                            method.response.header.Content-Type: "'image/gif'"
                                            method.response.header.Content-Disposition: "'attachment; filename=\"credential.gif\"'"
                                        contentHandling: CONVERT_TO_BINARY
                                uri: http://oi260.photobucket.com/albums/ii2/catgirl214/ExampleText.gif
                                passthroughBehavior: when_no_match
                                httpMethod: GET
                                contentHandling: CONVERT_TO_BINARY
                                type: http
                x-amazon-apigateway-binary-media-types:
                    - image/gif
    ReceiveLambdaPermissionApiGateway:
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName:
                Fn::GetAtt:
                    - AuthLambdaFunction
                    - Arn
            Action: lambda:InvokeFunction
            Principal: apigateway.amazonaws.com
            SourceArn:
                Fn::Join:
                    - ''
                    - - 'arn:aws:execute-api:'
                      - Ref: AWS::Region
                      - ":"
                      - Ref: AWS::AccountId
                      - ":"
                      - Ref: ApiGatewayRestApi
                      - "/*/*"
    ApiGatewayDeployment:
        Type: AWS::ApiGateway::Deployment
        Properties:
            RestApiId:
                Ref: ApiGatewayRestApi
            StageName: production
Parameters:
    AuthLambdaFunctionS3Bucket:
        Type: String
    AuthLambdaFunctionS3Key:
        Type: String
    AuthLambdaFunctionName:
        Type: String
    AuthLambdaFunctionRole:
        Type: String
    ApiGatewayRestApiName:
        Type: String
#TODO: Output
